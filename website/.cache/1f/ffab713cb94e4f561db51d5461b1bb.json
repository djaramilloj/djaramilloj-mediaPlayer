{"id":"node_modules/@djaramilloj1/mediaplayer/src/plugins/AutoPause.ts","dependencies":[{"name":"/Users/juandavidjaramillo/Desktop/JAVASCRIPT/JS_PROFESIONAL/website/package.json","includedInParent":true,"mtime":1597081372575},{"name":"/Users/juandavidjaramillo/Desktop/JAVASCRIPT/JS_PROFESIONAL/website/node_modules/@djaramilloj1/mediaplayer/package.json","includedInParent":true,"mtime":1597081341381}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AutoPause = /** @class */ (function () {\n    function AutoPause() {\n        this.threshold = 0.25;\n        this.handler = this.handler.bind(this);\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    }\n    AutoPause.prototype.run = function (player) {\n        this.player = player;\n        var observer = new IntersectionObserver(this.handler, {\n            threshold: this.threshold\n        });\n        observer.observe(this.player.media);\n        // visibility change\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange);\n    };\n    AutoPause.prototype.handler = function (entries) {\n        // entries son los objetos que estamos observando\n        var entry = entries[0];\n        var isVisible = entry.intersectionRatio >= this.threshold; // is visible\n        (isVisible)\n            ? this.player.play()\n            : this.player.media.pause();\n        console.log(entry);\n    };\n    AutoPause.prototype.handleVisibilityChange = function () {\n        var isVisible = document.visibilityState;\n        (isVisible === 'hidden')\n            ? this.player.media.pause()\n            : this.player.play();\n    };\n    return AutoPause;\n}());\nexports.default = AutoPause;\n"},"sourceMaps":{"js":{"version":3,"file":"AutoPause.js","sourceRoot":"","sources":["node_modules/@djaramilloj1/mediaplayer/src/plugins/AutoPause.ts"],"names":[],"mappings":";;AAEA;IAGI;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzE,CAAC;IAED,uBAAG,GAAH,UAAI,MAAM;QACN,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAM,QAAQ,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE;YACpD,SAAS,EAAE,IAAI,CAAC,SAAS;SAC5B,CAAC,CAAA;QAEF,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEpC,oBAAoB;QACpB,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,sBAAsB,CAAC,CAAA;IAC9E,CAAC;IAEO,2BAAO,GAAf,UAAgB,OAAO;QACnB,iDAAiD;QACjD,IAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAEzB,IAAM,SAAS,GAAG,KAAK,CAAC,iBAAiB,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,aAAa;QAC1E,CAAC,SAAS,CAAC;YACP,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YACpB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,CAAA;QAE/B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAEO,0CAAsB,GAA9B;QACI,IAAM,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC;QAC3C,CAAC,SAAS,KAAK,QAAQ,CAAC;YACpB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE;YAC3B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;IAC5B,CAAC;IACL,gBAAC;AAAD,CAAC,AAvCD,IAuCC;AAED,kBAAe,SAAS,CAAC","sourcesContent":["import MediaPlayer from '../mediaPlayer';\n\nclass AutoPause {\n    private threshold: number;\n    private player: MediaPlayer;\n    constructor () {\n        this.threshold = 0.25\n        this.handler = this.handler.bind(this);\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n    }\n\n    run(player) {\n        this.player = player;\n        const observer = new IntersectionObserver(this.handler, {\n            threshold: this.threshold\n        })\n\n        observer.observe(this.player.media);\n        \n        // visibility change\n        document.addEventListener(\"visibilitychange\", this.handleVisibilityChange)\n    }\n\n    private handler(entries) {\n        // entries son los objetos que estamos observando\n        const entry = entries[0];\n        \n        const isVisible = entry.intersectionRatio >= this.threshold; // is visible\n        (isVisible)\n            ? this.player.play()\n            : this.player.media.pause()\n\n        console.log(entry); \n    }\n\n    private handleVisibilityChange() {\n        const isVisible = document.visibilityState;\n        (isVisible === 'hidden')\n            ? this.player.media.pause()\n            : this.player.play()\n    }\n}\n\nexport default AutoPause;"]}},"error":null,"hash":"8395fdbfb94ba40710621c8b95565a2d","cacheData":{"env":{}}}